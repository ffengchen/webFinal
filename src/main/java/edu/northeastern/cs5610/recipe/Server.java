/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.northeastern.cs5610.recipe;

import com.mongodb.client.MongoCollection;
import dagger.Component;
import edu.northeastern.cs5610.recipe.controller.Controller;
import edu.northeastern.cs5610.recipe.controller.ControllerModule;
import edu.northeastern.cs5610.recipe.dao.Dao;
import edu.northeastern.cs5610.recipe.dao.DaoModule;
import edu.northeastern.cs5610.recipe.database.DatabaseModule;
import edu.northeastern.cs5610.recipe.model.Comment;
import edu.northeastern.cs5610.recipe.model.Recipe;
import edu.northeastern.cs5610.recipe.model.Tag;
import edu.northeastern.cs5610.recipe.model.User;
import edu.northeastern.cs5610.recipe.view.View;
import edu.northeastern.cs5610.recipe.view.ViewModule;

import java.util.Set;
import javax.inject.Inject;
import javax.inject.Singleton;

/**
 * The interface Server component.
 */
@Component(modules = {ControllerModule.class, ViewModule.class, DaoModule.class,
    DatabaseModule.class})
@Singleton
interface ServerComponent {

  /**
   * Server server.
   *
   * @return the server
   */
  public Server server();
}

/**
 * The type Server.
 */
public class Server {

  /**
   * The Controllers.
   */
  @Inject
  Set<Controller> controllers;

  /**
   * The Views.
   */
  @Inject
  Set<View> views;

  /**
   * The Daos.
   */
  @Inject
  Set<Dao> daos;


  /**
   * The Recipe collection.
   */
  @Inject
  MongoCollection<Recipe> recipeCollection;

  /**
   * The User collection.
   */
  @Inject
  MongoCollection<User> userCollection;

  /**
   * The Comment collection.
   */
  @Inject
  MongoCollection<Comment> commentCollection;

  /**
   * The Tag collection.
   */
  @Inject
  MongoCollection<Tag> tagCollection;

  /**
   * Instantiates a new Server.
   */
  @Inject
  Server() {
  }

  /**
   * Start.
   */
  void start() {
    for (Dao dao : daos) {
      dao.register();
    }

    for (Controller controller : controllers) {
      controller.register();
    }

    for (View view : views) {
      view.register();
    }

  }
}
